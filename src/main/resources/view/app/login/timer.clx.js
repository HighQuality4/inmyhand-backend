/*
 * App URI: app/login/timer
 * Source Location: app/login/timer.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/login/timer", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * timer.js
			 * Created at 2025. 4. 25. 오전 11:46:28.
			 *
			 * @author seongkwan
			 ************************************************/

			// 타이머 함수
			let timerInterval = null;

			function startEmailTimer(duration) {
			    if (timerInterval) clearInterval(timerInterval);

			    let remainingTime = duration;
			    const label = app.lookup("timer_sec");

			    timerInterval = setInterval(function () {
			        const minutes = padZero(Math.floor(remainingTime / 60));
			        const seconds = padZero(remainingTime % 60);

			        if (label) label.value = "남은 시간: " + minutes + ":" + seconds;

			        if (--remainingTime < 0) {
			            clearInterval(timerInterval);
			            if (label) label.value = "⛔ 인증 시간이 만료되었습니다.";

			            // ✅ 콜백 방식으로 외부에 "타이머 끝났어요" 알릴 수 있음
			            if (typeof onTimerEnd === 'function') {
			                onTimerEnd();
			            }
			        }
			    }, 1000);
			}

			function padZero(num) {
			    return (num < 10 ? '0' : '') + num;
			}
			// End - User Script
			
			// Header
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 520px) and (max-width: 1023.984px)", "timer");
			app.supportMedia("all and (min-width: 500px) and (max-width: 519.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var inputBox_1 = new cpr.controls.InputBox("timer_sec");
			container.addChild(inputBox_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"width": "520px",
						"height": "52px",
						"left": "calc(50% - 260px)",
						"top": "calc(50% - 26px)"
					}, 
					{
						"media": "all and (min-width: 520px) and (max-width: 1023.984px)",
						"width": "520px",
						"height": "52px",
						"left": "calc(50% - 260px)",
						"top": "calc(50% - 26px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 519.984px)",
						"width": "254px",
						"height": "52px",
						"left": "calc(50% - 127px)",
						"top": "calc(50% - 26px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"width": "178px",
						"height": "52px",
						"left": "calc(50% - 89px)",
						"top": "calc(50% - 26px)"
					}
				]
			});
		}
	});
	app.title = "timer";
	cpr.core.Platform.INSTANCE.register(app);
})();
