/*
 * App URI: app/mypage/myinfo
 * Source Location: app/mypage/myinfo.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/mypage/myinfo", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * contents_container.js
			 * Created at 2025. 4. 17. 오후 1:52:50.
			 *
			 * @author gyrud
			 ************************************************/
			const showToastModule = cpr.core.Module.require("module/common/showToast");
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				// 내 데이터 불러오기
				var dmGet = app.lookup("dmGetMyInfo");
				var smsGet = app.lookup("smsGetMyInfo");
				
				smsGet.addEventListenerOnce("submit-success", function(ev) {
			    // 1. DataMap에서 값 꺼내기
			    var nickname = dmGet.getValue("nickname");
			    var phoneNum = dmGet.getValue("phoneNum");
			    var email = dmGet.getValue("email");

			    // 2. input에 값 설정
			    app.lookup("nickname").value = nickname;
			    app.lookup("phoneNum").value = phoneNum;
			    app.lookup("email").value = email;
			  });

			  smsGet.send();
			}

			/*
			 * "내 정보 수정하기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				
				var dmSet = app.lookup("dmSetMyInfo");
				var smsSet = app.lookup("smsSetMyInfo");
				
				var email = app.lookup("email").value;
				var nickname = app.lookup("nickname").value;
				var phoneNum = app.lookup("phoneNum").value;
				
				dmSet.setValue("email", email);
				dmSet.setValue("nickname", nickname);
				dmSet.setValue("phoneNum", phoneNum);
				
				smsSet.send();
			}

			/*
			 * 서브미션에서 receive 이벤트 발생 시 호출.
			 * 서버로 부터 데이터를 모두 전송받았을 때 발생합니다.
			 */
			function onButtonClick2(e) {
			  var button = e.control;
			  
			  // 먼저 로컬 회원인지 확인
			  var smsCheckLocal = app.lookup("smsCheckLocal");
			  smsCheckLocal.send();
			}

			function onSmsCheckLocalReceive(e) {
			  var smsCheckLocal = e.control;
			  var xhr = smsCheckLocal.xhr;
			  
			  // 응답 형식에 따라 적절히 처리
			  try {
			    // 응답이 JSON 형식인 경우
			    var response = JSON.parse(xhr.responseText);
			    
			    // 문자열 비교 시 주의 (따옴표가 포함된 경우도 있음)
			    if (response === false || response === "false" || response == false) {
			      showToastModule.showToast("로컬 가입 회원만 변경이 가능합니다!", 2000);
			      history.back();
			      return;
			    }
			  } catch (error) {
			    // 응답이 JSON이 아닌 경우
			    console.error("응답 처리 오류:", error);
			    console.log("원본 응답:", xhr.responseText);
			    
			    // 텍스트 응답 처리
			    if (xhr.responseText.indexOf("false") !== -1) {
			      showToastModule.showToast("로컬 가입 회원만 변경이 가능합니다!", 2000);
			      history.back();
			      return;
			    }
			  }
			  
			  // 로컬 회원인 경우 비밀번호 변경 로직 진행
			  proceedWithPasswordChange();
			}

			function proceedWithPasswordChange() {
			  var pass1 = app.lookup("chPassword").value;
			  var pass2 = app.lookup("chPassword2").value;
			  
			  if (pass1 === "" || pass2 === "") {
			    showToastModule.showToast("비밀번호를 입력해주세요.", 2000);
			    return;
			  }
			  
			  if (pass1 !== pass2) {
			    showToastModule.showToast("비밀번호가 서로 일치하지 않습니다.", 2000);
			    return;
			  }
			  
			  var dmPass = app.lookup("dmChangePw");
			  var smsPass = app.lookup("smsChangePw");
			  dmPass.setValue("newPassword", pass1); // 또는 필요한 key로 설정
			  smsPass.send();
			}
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dmGetMyInfo");
			dataMap_1.parseData({
				"columns" : [
					{"name": "email"},
					{"name": "nickname"},
					{"name": "phoneNum"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmSetMyInfo");
			dataMap_2.parseData({
				"columns" : [
					{"name": "email"},
					{"name": "nickname"},
					{"name": "phoneNum"}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmChangePw");
			dataMap_3.parseData({
				"columns" : [
					{"name": "password1"},
					{"name": "password2"}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("smsGetMyInfo");
			submission_1.action = "/api/myInfo/getMyInfo";
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("smsSetMyInfo");
			submission_2.action = "/api/myInfo/setMyInfo";
			submission_2.addRequestData(dataMap_2);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("smsChangePw");
			submission_3.action = "/api/myInfo/change/password";
			submission_3.addRequestData(dataMap_3);
			if(typeof onSmsChangePwReceive == "function") {
				submission_3.addEventListener("receive", onSmsChangePwReceive);
			}
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("smsCheckLocal");
			submission_4.withCredentials = true;
			submission_4.action = "/api/user/check/local";
			if(typeof onSmsCheckLocalReceive == "function") {
				submission_4.addEventListener("receive", onSmsCheckLocalReceive);
			}
			app.register(submission_4);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["contents-container"]);
			container.style.css({
				"background-color" : "#FFFFFF",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "내 정보 변경 페이지";
			output_1.style.css({
				"color" : "#000000",
				"font-weight" : "bold",
				"font-size" : "24px",
				"font-family" : "Kim jung chul Myungjo Regular"
			});
			container.addChild(output_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "49px",
						"width": "520px",
						"height": "74px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "49px",
						"width": "254px",
						"height": "74px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "49px",
						"width": "178px",
						"height": "74px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "내 정보";
			output_2.style.css({
				"color" : "#000000",
				"font-weight" : "bold",
				"font-size" : "20px",
				"font-family" : "Kim jung chul Myungjo Regular"
			});
			container.addChild(output_2, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "278px",
						"width": "520px",
						"height": "74px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "278px",
						"width": "254px",
						"height": "74px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "278px",
						"width": "178px",
						"height": "74px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = "비밀번호 변경";
			output_3.style.css({
				"color" : "#000000",
				"font-weight" : "bold",
				"font-size" : "20px",
				"font-family" : "Kim jung chul Myungjo Regular"
			});
			container.addChild(output_3, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "663px",
						"width": "520px",
						"height": "74px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "663px",
						"width": "254px",
						"height": "74px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "663px",
						"width": "178px",
						"height": "74px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "내 정보 수정하기";
			button_1.style.css({
				"border-radius" : "5px",
				"background-color" : "#91C0CE",
				"font-weight" : "bold"
			});
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "580px",
						"width": "520px",
						"height": "52px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "580px",
						"width": "254px",
						"height": "52px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "580px",
						"width": "178px",
						"height": "52px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "비밀번호 변경하기";
			button_2.style.css({
				"border-radius" : "5px",
				"font-weight" : "bold"
			});
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "913px",
						"width": "520px",
						"height": "52px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "913px",
						"width": "254px",
						"height": "52px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "913px",
						"width": "178px",
						"height": "52px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var group_1 = new cpr.controls.Container();
			group_1.style.css({
				"border-radius" : "5px",
				"background-color" : "#D5EDF4"
			});
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_1);
			(function(container){
				var inputBox_1 = new cpr.controls.InputBox("nickname");
				inputBox_1.style.css({
					"border-radius" : "5px"
				});
				container.addChild(inputBox_1, {
					"top": "20px",
					"left": "89px",
					"width": "411px",
					"height": "40px"
				});
				var inputBox_2 = new cpr.controls.InputBox("email");
				inputBox_2.readOnly = true;
				inputBox_2.style.css({
					"border-radius" : "5px"
				});
				container.addChild(inputBox_2, {
					"top": "70px",
					"left": "89px",
					"width": "411px",
					"height": "40px"
				});
				var inputBox_3 = new cpr.controls.InputBox("phoneNum");
				inputBox_3.placeholder = "알림 서비스용";
				inputBox_3.style.css({
					"border-radius" : "5px"
				});
				container.addChild(inputBox_3, {
					"top": "120px",
					"left": "89px",
					"width": "411px",
					"height": "40px"
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "닉네임";
				output_4.style.css({
					"font-size" : "16px",
					"text-align" : "center"
				});
				container.addChild(output_4, {
					"top": "20px",
					"left": "2px",
					"width": "77px",
					"height": "40px"
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "이메일";
				output_5.style.css({
					"font-size" : "16px",
					"text-align" : "center"
				});
				container.addChild(output_5, {
					"top": "70px",
					"left": "2px",
					"width": "77px",
					"height": "40px"
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "전화번호";
				output_6.style.css({
					"font-size" : "16px",
					"text-align" : "center"
				});
				container.addChild(output_6, {
					"top": "120px",
					"left": "2px",
					"width": "77px",
					"height": "40px"
				});
			})(group_1);
			container.addChild(group_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "372px",
						"width": "520px",
						"height": "184px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "372px",
						"width": "254px",
						"height": "184px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "372px",
						"width": "178px",
						"height": "184px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var userDefinedControl_1 = new udc.mypage.profile();
			container.addChild(userDefinedControl_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "133px",
						"width": "520px",
						"height": "124px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "133px",
						"width": "254px",
						"height": "124px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "133px",
						"width": "178px",
						"height": "124px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var inputBox_4 = new cpr.controls.InputBox("chPassword");
			inputBox_4.secret = true;
			inputBox_4.placeholder = "새 비밀번호 입력";
			inputBox_4.style.css({
				"border-radius" : "5px",
				"font-size" : "16px",
				"text-align" : "center"
			});
			container.addChild(inputBox_4, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "759px",
						"width": "520px",
						"height": "52px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "759px",
						"width": "254px",
						"height": "52px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "759px",
						"width": "178px",
						"height": "52px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			
			var inputBox_5 = new cpr.controls.InputBox("chPassword2");
			inputBox_5.secret = true;
			inputBox_5.placeholder = "새 비밀번호 확인";
			inputBox_5.style.css({
				"border-radius" : "5px",
				"font-size" : "16px",
				"text-align" : "center"
			});
			container.addChild(inputBox_5, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "829px",
						"width": "520px",
						"height": "52px",
						"left": "calc(50% - 260px)"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "829px",
						"width": "254px",
						"height": "52px",
						"left": "calc(50% - 127px)"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "829px",
						"width": "178px",
						"height": "52px",
						"left": "calc(50% - 89px)"
					}
				]
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "myinfo";
	cpr.core.Platform.INSTANCE.register(app);
})();
