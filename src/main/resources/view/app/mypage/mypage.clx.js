/*
 * App URI: app/mypage/mypage
 * Source Location: app/mypage/mypage.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/mypage/mypage", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * contents_container.js
			 * Created at 2025. 4. 17. 오후 1:52:50.
			 *
			 * @author gyrud
			 ************************************************/

			/*
			 * "로그아웃" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e) {
				
				var btn = e.control;
				
			    app.lookup("smsLogout").send(); // 서버 전송
			    
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSmsLogoutSubmitSuccess(e){
				var smsLogout = e.control;
				localStorage.removeItem("userId");
			    console.log("✅ userId 삭제됨");

			    // 원하는 경로로 이동
			    location.href = "/auth/login";
			}

			/*
			 * 서브미션에서 receive 이벤트 발생 시 호출.
			 * 서버로 부터 데이터를 모두 전송받았을 때 발생합니다.
			 */
			function onSmsLogoutReceive(e){
				var smsLogout = e.control;
				
				var xhr = smsLogout.xhr;
				var res = JSON.parse(xhr.responseText);
				console.log(res);
				if (res === true) {
					alert("로그아웃 되었습니다.!");
				} else {
					alert("로그아웃에 실패하였습니다!");
					e.preventDefault();
				}
				
			};
			// End - User Script
			
			// Header
			var submission_1 = new cpr.protocols.Submission("smsLogout");
			submission_1.withCredentials = true;
			submission_1.action = "http://localhost:7079/api/users/logout";
			submission_1.mediaType = "application/json";
			if(typeof onSmsLogoutSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSmsLogoutSubmitSuccess);
			}
			if(typeof onSmsLogoutReceive == "function") {
				submission_1.addEventListener("receive", onSmsLogoutReceive);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["contents-container"]);
			container.style.css({
				"background-color" : "#FFFFFF",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "로그아웃";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "68px",
						"left": "453px",
						"width": "100px",
						"height": "20px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "68px",
						"left": "221px",
						"width": "49px",
						"height": "20px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "68px",
						"left": "155px",
						"width": "34px",
						"height": "20px"
					}
				]
			});
		}
	});
	app.title = "mypage";
	cpr.core.Platform.INSTANCE.register(app);
})();
