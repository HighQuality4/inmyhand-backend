/*
 * App URI: app/fridge/fridge_main
 * Source Location: app/fridge/fridge_main.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/fridge/fridge_main", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * contents_container.js
			 * Created at 2025. 4. 17. 오후 1:52:50.
			 *
			 * @author gyrud
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				alert("동작 테스트합니다");
				
				app.lookup("foodListGrid").redraw();
					
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad2(e){
				app.lookup("getFoodList").send();
				app.lookup("getFridgeList").send();
			}

			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			//function onButtonClick2(e){
			//	var button = e.control;
			//	app.lookup("getFridgeList").send();
			//	
			//};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("foodList");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "id",
						"dataType": "number"
					},
					{
						"name": "foodName",
						"dataType": "string"
					},
					{
						"name": "foodAmount",
						"dataType": "number"
					},
					{"name": "endDate"},
					{"name": "chargeDate"},
					{"name": "saveDate"},
					{
						"name": "foodCategoryName",
						"dataType": "string"
					},
					{
						"name": "fridgeId",
						"dataType": "number"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("fridgeList");
			dataSet_2.parseData({
				"columns" : [
					{
						"name": "fridgeId",
						"dataType": "number"
					},
					{"name": "fridgeName"},
					{"name": "favoriteState"},
					{
						"name": "isLeader",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("fridgeIdParam");
			dataMap_1.parseData({
				"columns" : [{
					"name": "fridgeId",
					"dataType": "number"
				}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("getFoodList");
			submission_1.method = "post";
			submission_1.action = "/api/fridge/change";
			submission_1.mediaType = "application/json";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("getFridgeList");
			submission_2.action = "/api/fridge/myFridgeList";
			submission_2.mediaType = "application/json";
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["contents-container"]);
			container.style.css({
				"background-color" : "#FFFFFF",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var grid_1 = linker.grid_1 = new cpr.controls.Grid("foodListGrid");
			grid_1.init({
				"dataSet": app.lookup("foodList"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "id";
								cell.text = "id";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "foodName";
								cell.text = "foodName";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "foodAmount";
								cell.text = "foodAmount";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "endDate";
								cell.text = "endDate";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "chargeDate";
								cell.text = "chargeDate";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "saveDate";
								cell.text = "saveDate";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "foodCategoryName";
								cell.text = "foodCategoryName";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "fridgeId";
								cell.text = "fridgeId";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "id";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "foodName";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "foodAmount";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "endDate";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "chargeDate";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "saveDate";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "foodCategoryName";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "fridgeId";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "414px",
						"left": "6px",
						"width": "590px",
						"height": "223px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "414px",
						"left": "3px",
						"width": "288px",
						"height": "223px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "414px",
						"left": "2px",
						"width": "202px",
						"height": "223px"
					}
				]
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "Button";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "740px",
						"left": "436px",
						"width": "100px",
						"height": "20px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "740px",
						"left": "213px",
						"width": "49px",
						"height": "20px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "740px",
						"left": "149px",
						"width": "34px",
						"height": "20px"
					}
				]
			});
			
			var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.fridge.fridgeCRUD("fridgeCRUD");
			userDefinedControl_1.addStr = "추가";
			container.addChild(userDefinedControl_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "647px",
						"left": "144px",
						"width": "300px",
						"height": "40px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "647px",
						"left": "70px",
						"width": "146px",
						"height": "40px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "647px",
						"left": "49px",
						"width": "103px",
						"height": "40px"
					}
				]
			});
			
			var navigationBar_1 = new cpr.controls.NavigationBar("fridgNavbar");
			container.addChild(navigationBar_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "115px",
						"left": "151px",
						"width": "300px",
						"height": "40px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "115px",
						"left": "74px",
						"width": "146px",
						"height": "40px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "115px",
						"left": "52px",
						"width": "103px",
						"height": "40px"
					}
				]
			});
			
			var grid_2 = new cpr.controls.Grid("grd1");
			grid_2.init({
				"dataSet": app.lookup("fridgeList"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "fridgeId";
								cell.text = "fridgeId";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "fridgeName";
								cell.text = "fridgeName";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "favoriteState";
								cell.text = "favoriteState";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "isLeader";
								cell.text = "isLeader";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "fridgeId";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "fridgeName";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "favoriteState";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "isLeader";
							}
						}
					]
				}
			});
			container.addChild(grid_2, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "184px",
						"left": "77px",
						"width": "400px",
						"height": "200px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "184px",
						"left": "38px",
						"width": "195px",
						"height": "200px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "184px",
						"left": "26px",
						"width": "137px",
						"height": "200px"
					}
				]
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "Button";
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "721px",
						"left": "69px",
						"width": "100px",
						"height": "20px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "721px",
						"left": "34px",
						"width": "49px",
						"height": "20px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "721px",
						"left": "24px",
						"width": "34px",
						"height": "20px"
					}
				]
			});
			if(typeof onBodyLoad2 == "function"){
				app.addEventListener("load", onBodyLoad2);
			}
			// Linking
			linker.userDefinedControl_1.grdCtrl = linker.grid_1;
		}
	});
	app.title = "fridge_main";
	cpr.core.Platform.INSTANCE.register(app);
})();
