/*
 * App URI: app/admin/admin-user
 * Source Location: app/admin/admin-user.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/admin/admin-user", { 
		onPrepare: function(loader) {
			loader.addCSS("theme/custom/web.part.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * admin-user.js
			 * Created at 2025. 4. 21. 오후 3:20:39.
			 *
			 * @author choeyeongbeom
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.lookup("admin_sms1").send();
				
				radioInit();
				
			}

			const radioInit = () => {
					
				var rdb = app.lookup("rdb1");
			    var ds1 = app.lookup("ds1");
			    rdb.setItemSet(ds1, {
			        label: "상태", 
			        value: "값"    
			    });
			}


			/*
			 * 콤보 박스에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onCmb1ItemClick(e){
				var cmb1 = e.control;
				var combo1 = app.lookup("cmb1");
				var comboset = app.lookup("comboset");
				combo1.setItemSet(comboset, {label: "상태", value: "값"});

			}


			/*
			 * 그리드에서 cell-click 이벤트 발생 시 호출.
			 * Grid의 Cell 클릭시 발생하는 이벤트.
			 */
			function onGrd1CellClick(e){

				var grd1 = e.control;
			    var usersDataset = app.lookup("content");
			    
			    // 클릭된 열의 이름 가져오기
			    var clickedColumnName =  e.columnName;
			    
			    // "레시피 보러가기" 컬럼인지 확인
			    if(clickedColumnName === "id") {
			        var recipeId = usersDataset.getValue(e.rowIndex, clickedColumnName);
			        if(recipeId) {
			            window.location.href = "/admin/recipe/" + recipeId;
			        }
			    }
			    
			  
			}


			/*
			 * "검색" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(e){
				
				var btn1 = e.control;
				const rdb1 = app.lookup("rdb1").value;
				const cmb2 = app.lookup("cmb2").value;
				const ipb1 = app.lookup("ipb1").value;

				if (rdb1 === null && (!ipb1 || !ipb1.trim())) {
					
				} 
				else if (rdb1 === null || !ipb1?.trim()) {
				    alert("입력값을 확인해주세요.");
				    return;
				}

				const searchSubmission = app.lookup("admin_search");
				searchSubmission.removeAllParameters();

				if(rdb1 !== null){
					searchSubmission.setParameters(rdb1,ipb1);
				} 
				
				if(cmb2 !== null){
			        searchSubmission.setParameters("combo", cmb2);
			    } 
				
			    searchSubmission.send();
			}

			/*
			 * "검색" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				var btn3 = e.control;
				
				const rdb1 = app.lookup("rdb1");
				const cmb2 = app.lookup("cmb2");
				const ipb1 = app.lookup("ipb1");
				
				rdb1.clearSelection();
				cmb2.clearSelection();
				ipb1.clear();
				cmb2.value = "전체보기";
			}

			/*
			 * 그룹에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onGroupClick(e){
				var group = e.control;
					window.location.href = "/server/grafana";
			}

			/*
			 * 그룹에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onGroupClick2(e){
				var group = e.control;
					window.location.href = "/";
			}

			/*
			 * "저장" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				var btn2 = e.control;
				app.lookup("admin_updates").send();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("content");
			dataSet_1.parseData({
				"columns" : [
					{"name": "memberName"},
					{"name": "email"},
					{"name": "nickname"},
					{
						"name": "regdate",
						"dataType": "string"
					},
					{"name": "providerId"},
					{"name": "status"},
					{"name": "phoneNum"},
					{"name": "id"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("comboset");
			dataSet_2.parseData({
				"columns": [
					{"name": "상태"},
					{"name": "값"}
				],
				"rows": [
					{"상태": "활성화", "값": "active"},
					{"상태": "비활성화", "값": "banned"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("combosetSearch");
			dataSet_3.parseData({
				"columns": [
					{"name": "상태"},
					{"name": "값"}
				],
				"rows": [
					{"상태": "전체보기", "값": "all"},
					{"상태": "활성화", "값": "active"},
					{"상태": "비활성화", "값": "banned"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("ds1");
			dataSet_4.parseData({
				"columns": [
					{"name": "상태"},
					{"name": "값"}
				],
				"rows": [
					{"상태": "닉네임", "값": "nickname"},
					{"상태": "이름", "값": "name"},
					{"상태": "이메일", "값": "email"}
				]
			});
			app.register(dataSet_4);
			var submission_1 = new cpr.protocols.Submission("admin_sms1");
			submission_1.method = "get";
			submission_1.action = "/api/admin/users";
			submission_1.addResponseData(dataSet_1, true);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("admin_search");
			submission_2.action = "/api/admin/user/search";
			submission_2.addResponseData(dataSet_1, false);
			if(typeof onAdmin_searchSubmitSuccess2 == "function") {
				submission_2.addEventListener("submit-success", onAdmin_searchSubmitSuccess2);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("admin_updates");
			submission_3.withCredentials = false;
			submission_3.action = "/api/admin/user/update";
			submission_3.addRequestData(dataSet_1);
			submission_3.addResponseData(dataSet_1, false);
			app.register(submission_3);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"background-image" : "none",
				"background-color" : "#f3f1f0",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.init({
					"dataSet": app.lookup("content"),
					"columns": [
						{"width": "50px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "memberName";
									cell.text = "이름";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "email";
									cell.text = "이메일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "nickname";
									cell.text = "닉네임";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "regdate";
									cell.text = "가입날짜";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "providerId";
									cell.text = "가입 경로";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "status";
									cell.text = "상태";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "phoneNum";
									cell.text = "전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.targetColumnName = "id";
									cell.text = "작성 레시피 보러가기";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "memberName";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.bind("value").toDataColumn("memberName");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "email";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output();
										output_2.bind("value").toDataColumn("email");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "nickname";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.bind("value").toDataColumn("nickname");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "regdate";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.bind("value").toDataColumn("regdate");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "providerId";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.bind("value").toDataColumn("providerId");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "status";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("cmb1");
										comboBox_1.tooltip = "활성화/비활성화";
										comboBox_1.preventInput = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("comboset"), {
												"label": "상태",
												"value": "값"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("status");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "phoneNum";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output();
										output_6.bind("value").toDataColumn("phoneNum");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "id";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output();
										output_7.displayExp = "\"보러가기\"";
										output_7.bind("value").toDataColumn("id");
										return output_7;
									})();
								}
							}
						]
					}
				});
				grid_1.style.setClasses(["web-grid"]);
				grid_1.style.css({
					"background-color" : "#eaf1f3",
					"background-image" : "none"
				});
				if(typeof onGrd1CellClick == "function") {
					grid_1.addEventListener("cell-click", onGrd1CellClick);
				}
				container.addChild(grid_1, {
					"autoSize": "both",
					"width": "824px",
					"height": "475px"
				});
				var pageIndexer_1 = new cpr.controls.PageIndexer("RecipeIndex");
				pageIndexer_1.startPageIndex = 1;
				pageIndexer_1.viewPageCount = 5;
				container.addChild(pageIndexer_1, {
					"autoSize": "width",
					"width": "824px",
					"height": "40px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "125px",
				"right": "80px",
				"bottom": "80px",
				"left": "80px"
			});
			
			var group_2 = new cpr.controls.Container("footer");
			group_2.style.setClasses(["page-nav"]);
			group_2.style.css({
				"background-color" : "#FFFFFF"
			});
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.setColumns(["40px", "40px", "1fr", "40px", "1fr", "40px", "2fr"]);
			formLayout_1.setRows(["10px", "50px", "10px"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var group_3 = new cpr.controls.Container();
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_2);
				(function(container){
					var output_8 = new cpr.controls.Output();
					output_8.value = "Copyright © 내손안의 냉장고!. All rights reserved.";
					output_8.style.css({
						"text-align" : "right"
					});
					container.addChild(output_8, {
						"top": "0px",
						"right": "50px",
						"bottom": "0px",
						"left": "0px"
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 6,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"right": "0px",
				"bottom": "0px",
				"left": "0px",
				"height": "70px"
			});
			
			var group_4 = new cpr.controls.Container();
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_4.setLayout(xYLayout_3);
			(function(container){
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				container.addChild(inputBox_1, {
					"top": "5px",
					"right": "295px",
					"bottom": "5px",
					"width": "180px"
				});
				var button_1 = new cpr.controls.Button("btn1");
				button_1.value = "검색";
				if(typeof onBtn1Dblclick == "function") {
					button_1.addEventListener("dblclick", onBtn1Dblclick);
				}
				if(typeof onBtn1Click == "function") {
					button_1.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_1, {
					"top": "5px",
					"right": "237px",
					"width": "48px",
					"height": "30px"
				});
				var group_5 = new cpr.controls.Container();
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_5.setLayout(xYLayout_4);
				(function(container){
					var radioButton_1 = new cpr.controls.RadioButton("rdb1");
					radioButton_1.fixedWidth = false;
					if(typeof onRdb1ItemClick2 == "function") {
						radioButton_1.addEventListener("item-click", onRdb1ItemClick2);
					}
					container.addChild(radioButton_1, {
						"top": "5px",
						"right": "10px",
						"bottom": "5px",
						"width": "234px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cmb2");
					comboBox_2.value = "all";
					comboBox_2.preventInput = true;
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("combosetSearch"), {
							"label": "상태",
							"value": "값"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "5px",
						"right": "250px",
						"bottom": "5px",
						"width": "100px"
					});
				})(group_5);
				container.addChild(group_5, {
					"top": "0px",
					"right": "485px",
					"width": "359px",
					"height": "39px"
				});
				var button_2 = new cpr.controls.Button("btn2");
				button_2.value = "저장";
				if(typeof onBtn2Click == "function") {
					button_2.addEventListener("click", onBtn2Click);
				}
				container.addChild(button_2, {
					"top": "5px",
					"right": "31px",
					"width": "48px",
					"height": "30px"
				});
				var button_3 = new cpr.controls.Button("btn3");
				button_3.value = "초기화";
				if(typeof onBtn3Click == "function") {
					button_3.addEventListener("click", onBtn3Click);
				}
				container.addChild(button_3, {
					"top": "5px",
					"right": "180px",
					"bottom": "5px",
					"width": "48px"
				});
			})(group_4);
			container.addChild(group_4, {
				"top": "80px",
				"right": "80px",
				"left": "80px",
				"height": "40px"
			});
			
			var group_6 = new cpr.controls.Container("header");
			group_6.style.css({
				"background-color" : "#FBF3EB"
			});
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.scrollable = false;
			formLayout_2.horizontalSpacing = "0px";
			formLayout_2.verticalSpacing = "0px";
			formLayout_2.topMargin = "0px";
			formLayout_2.rightMargin = "0px";
			formLayout_2.bottomMargin = "0px";
			formLayout_2.leftMargin = "0px";
			formLayout_2.setColumns(["40px", "1fr", "1fr", "48px", "10px", "48px", "40px"]);
			formLayout_2.setRows(["10px", "1fr", "22px", "1px"]);
			group_6.setLayout(formLayout_2);
			(function(container){
				var output_9 = new cpr.controls.Output();
				output_9.value = "내손안의 냉장고";
				output_9.style.css({
					"color" : "#856C66",
					"font-weight" : "bold",
					"font-size" : "20px",
					"font-family" : "Kim jung chul Myungjo Regular"
				});
				container.addChild(output_9, {
					"colIndex": 1,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 2
				});
				var group_7 = new cpr.controls.Container();
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_7.setLayout(xYLayout_5);
				(function(container){
					var image_1 = new cpr.controls.Image();
					image_1.src = "theme/images/grafana.svg";
					container.addChild(image_1, {
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "41px"
					});
					var output_10 = new cpr.controls.Output();
					output_10.value = "모니터링";
					output_10.style.setClasses(["page-nav"]);
					container.addChild(output_10, {
						"top": "40px",
						"right": "0px",
						"left": "0px",
						"height": "22px"
					});
				})(group_7);
				if(typeof onGroupClick == "function") {
					group_7.addEventListener("click", onGroupClick);
				}
				container.addChild(group_7, {
					"colIndex": 3,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 2
				});
				var group_8 = new cpr.controls.Container();
				var xYLayout_6 = new cpr.controls.layouts.XYLayout();
				group_8.setLayout(xYLayout_6);
				(function(container){
					var output_11 = new cpr.controls.Output();
					output_11.value = "홈";
					output_11.style.setClasses(["page-nav"]);
					container.addChild(output_11, {
						"top": "40px",
						"right": "0px",
						"left": "0px",
						"height": "22px"
					});
					var image_2 = new cpr.controls.Image();
					image_2.src = "theme/images/home.svg";
					container.addChild(image_2, {
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "41px"
					});
				})(group_8);
				if(typeof onGroupClick2 == "function") {
					group_8.addEventListener("click", onGroupClick2);
				}
				container.addChild(group_8, {
					"colIndex": 5,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 2
				});
			})(group_6);
			container.addChild(group_6, {
				"top": "0px",
				"right": "0px",
				"left": "0px",
				"height": "73px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "admin-user";
	cpr.core.Platform.INSTANCE.register(app);
})();
