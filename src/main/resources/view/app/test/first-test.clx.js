/*
 * App URI: app/test/first-test
 * Source Location: app/test/first-test.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/test/first-test", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * first-test.js
			 * Created at 2025. 3. 31. 오후 3:27:02.
			 *
			 * @author choeyeongbeom
			 ************************************************/

			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				app.lookup("sms1").send();
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.lookup("sms2").send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms2SubmitSuccess(e){
				app.getContainer().redraw();
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns" : [
					{"name": "s1"},
					{"name": "s2"},
					{"name": "s3"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{"name": "index"}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dm2");
			dataMap_2.parseData({
				"columns" : [
					{"name": "title"},
					{"name": "content"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "/api/index";
			submission_1.mediaType = "application/json";
			submission_1.addRequestData(dataMap_1);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms2");
			submission_2.action = "/api/board";
			submission_2.mediaType = "application/json";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataMap_2, false);
			submission_2.addResponseData(dataSet_1, false);
			if(typeof onSms2SubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onSms2SubmitSuccess);
			}
			app.register(submission_2);
			
			var matrixSubmission_1 = new cpr.protocols.MatrixSubmission("msm1");
			matrixSubmission_1.setMatrix({
				"request": {
					"format": "object",
					"data": {}
				},
				"response": {
					"format": "object",
					"data": {}
				}
			});
			app.register(matrixSubmission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "스";
			container.addChild(button_1, {
				"top": "84px",
				"left": "398px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "트";
			container.addChild(button_2, {
				"top": "128px",
				"left": "398px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "테";
			container.addChild(button_3, {
				"top": "54px",
				"left": "398px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			inputBox_1.bind("value").toDataMap(app.lookup("dm1"), "index");
			container.addChild(inputBox_1, {
				"top": "45px",
				"left": "85px",
				"width": "215px",
				"height": "127px"
			});
			
			var button_4 = new cpr.controls.Button();
			button_4.value = "Button";
			if(typeof onButtonClick == "function") {
				button_4.addEventListener("click", onButtonClick);
			}
			container.addChild(button_4, {
				"top": "248px",
				"left": "248px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "checkbox";
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "s1";
								cell.text = "s1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "s2";
								cell.text = "s2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "s3";
								cell.text = "s3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "checkbox";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "s1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "s2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "s3";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "84px",
				"left": "585px",
				"width": "400px",
				"height": "200px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("ipb2");
			inputBox_2.bind("value").toDataMap(app.lookup("dm2"), "content");
			container.addChild(inputBox_2, {
				"top": "354px",
				"left": "406px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output("oi1");
			output_1.bind("value").toDataMap(app.lookup("dm2"), "title");
			container.addChild(output_1, {
				"top": "373px",
				"left": "138px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "first-test";
	cpr.core.Platform.INSTANCE.register(app);
})();
