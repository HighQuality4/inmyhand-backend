/*
 * App URI: app/recipe/recipe_detail
 * Source Location: app/recipe/recipe_detail.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/recipe/recipe_detail", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * contents_container.js
			 * Created at 2025. 4. 17. 오후 1:52:50.
			 *
			 * @author gyrud
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				const pathName = window.location.pathname;
				const recipeId = pathName.split("/").pop();
					
				const recipeDetailSms = app.lookup("recipeDetailSms");
				
				recipeDetailSms.setRequestActionUrl(recipeDetailSms.action+"/"+recipeId);
				recipeDetailSms.send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onRecipeDetailSmsSubmitSuccess(e){
				const recipeDetailSms = e.control;
				
				const result = recipeDetailSms.xhr.responseText;
				const resultJson = JSON.parse(result);
				
				// 기본 정보
				const recipeTitle = app.lookup("recipeTitle");
				const typeCategory = app.lookup("typeCategory");
				const situationCategory = app.lookup("situationCategory");
				const methodCategory = app.lookup("methodCategory");
				const recipeImg = app.lookup("recipeImg");
				const recipeSummary = app.lookup("recipeSummary");
				const difficultyValue = app.lookup("difficultyValue");
				const cookingTimeValue = app.lookup("cookingTimeValue");
				const caloriesValue = app.lookup("caloriesValue");
				const recipeAuthorImg = app.lookup("recipeAuthorImg");
				const recipeAuthorName = app.lookup("recipeAuthorName");
				const likeCountValue = app.lookup("likeCountValue");
				const viewCountValue = app.lookup("viewCountValue")
					
				recipeTitle.value = resultJson.recipeName;
				const categories = resultJson.categories;
				for (let j = 0; j < categories.length; j++) {
				  const category = categories[j];
				  const categoryType = category.recipeCategoryType;
				  switch (categoryType) {
				    case "종류별":
			      	  typeCategory.value = "#" + category.recipeCategoryName;	
			      	  typeCategory.visible = true;
				      break;
				    case "상황별":
				      situationCategory.value = "#" + category.recipeCategoryName;
				      situationCategory.visible = true;
				      break;
				    case "방법별":
				      methodCategory.value = "#" + category.recipeCategoryName;
				      methodCategory.visible = true;
				      break;
				    default:
				      break;
				  }
				}
				recipeImg.src = resultJson.fileUrl[0];
				if(resultJson.summary!=null) {
					recipeSummary.value = resultJson.summary;
				} else {
					recipeSummary.visible = false;
				}
				difficultyValue.value = resultJson.difficulty;
				cookingTimeValue.value = resultJson.cookingTime;
				caloriesValue.value = resultJson.calories;
				recipeAuthorImg.src = resultJson.userProfileImageUrl;
				recipeAuthorName.value = resultJson.userNickname;
				likeCountValue.value = "좋아요 "+resultJson.likeCount+"개";
				viewCountValue.value = "조회수 "+resultJson.viewCount+"번";
				
				// 재료
				const ingredientGroup = app.lookup("ingredientGroup");
				for (let i = 0; i < resultJson.ingredients.length; i++) {
					const ingredients = resultJson.ingredients[i];
					const ingredientUDC = new udc.recipe.recipe_ingredient();
					ingredientUDC.ingredientName = ingredients.ingredientName;
					ingredientUDC.ingredientCount = ingredients.ingredientQuantity + ingredients.ingredientUnit;
					
					ingredientGroup.addChild(ingredientUDC, {
					  width: "100%",
					  height: "30px",
					});	
				}
				
				// 요리 과정
				const cookingProcessGroup = app.lookup("cookingProcessGroup");
				for (let i = 0; i < resultJson.steps.length; i++) {
					const step = resultJson.steps[i];
					const cookingProcess = new udc.recipe.cooking_process();
					cookingProcess.sequence = step.stepNumber;
					cookingProcess.explanation = step.stepDescription;
					cookingProcess.img = step.fileUrl; 
							
					cookingProcessGroup.addChild(cookingProcess, {
					  width: "100%",
					  height: "100px",
					});	
				}
				
				// 등록일, 수정일
				const createAt = app.lookup("createdAt");
				createAt.value = resultJson.createdAt;
				
				if(resultJson.updateAt) {
					const updatedAt = app.lookup("updatedAt");
					const updatedAtLabel = app.lookup("updatedAtLabel");
					updatedAtLabel.visible = true;
					updatedAt.value = resultJson.updateAt;
					updatedAt.visible = true;
				}

				// 댓글
				const commentList = app.lookup("commentList");
				const commentsData = resultJson.comments;
				
				if (commentsData.length){
					for (let i = 0; i < commentsData.length; i++) {
						const comment = commentsData[i];
						const commentUDC = new udc.recipe.recipe_comment();
						commentUDC.userImg = comment.userProfileImageUrl;
						commentUDC.userNickName = comment.nickname;
						commentUDC.createAt = comment.createAt;
						commentUDC.comment = comment.commentContents;
							
						commentList.addChild(commentUDC, {
						  width: "100%",
						  height: "100px",
						});	
					}	
				} else {
					const commentNull = new cpr.controls.Output();
					commentNull.value = "아직 이 레시피에 대한 댓글이 없어요!";
					commentList.addChild(commentNull, {
					  width: "100%",
					  height: "100px",
					});	
				}
				
				
			};
			// End - User Script
			
			// Header
			var submission_1 = new cpr.protocols.Submission("recipeDetailSms");
			submission_1.action = "/api/recipes";
			if(typeof onRecipeDetailSmsSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onRecipeDetailSmsSubmitSuccess);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["contents-container"]);
			container.style.css({
				"background-color" : "#FFFFFF",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 20;
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				var xYLayout_1 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output("recipeTitle");
					output_1.value = "Output";
					container.addChild(output_1, {
						"top": "0px",
						"bottom": "0px",
						"left": "0px",
						"width": "100px"
					});
					var group_3 = new cpr.controls.Container("recipeCategorys");
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.horizontalSpacing = "10px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.setColumns(["100px", "100px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setColumnAutoSizing(2, true);
					formLayout_1.setRows(["1fr"]);
					group_3.setLayout(formLayout_1);
					(function(container){
						var output_2 = new cpr.controls.Output("typeCategory");
						output_2.visible = false;
						output_2.value = "Output";
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_3 = new cpr.controls.Output("situationCategory");
						output_3.visible = false;
						output_3.value = "Output";
						container.addChild(output_3, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output("methodCategory");
						output_4.visible = false;
						output_4.value = "Output";
						container.addChild(output_4, {
							"colIndex": 2,
							"rowIndex": 0
						});
					})(group_3);
					container.addChild(group_3, {
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"width": "320px"
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "100%",
					"height": "30px"
				});
				var image_1 = new cpr.controls.Image("recipeImg");
				container.addChild(image_1, {
					"autoSize": "height",
					"width": "100%",
					"height": "520px"
				});
				var output_5 = new cpr.controls.Output("recipeSummary");
				output_5.value = "Output";
				container.addChild(output_5, {
					"width": "100%",
					"height": "20px"
				});
				var group_4 = new cpr.controls.Container();
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_2);
				(function(container){
					var group_5 = new cpr.controls.Container("recipeInfo");
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.horizontalSpacing = "10px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.setColumns(["15px", "100px", "20px", "100px", "30px", "100px"]);
					formLayout_2.setColumnAutoSizing(1, true);
					formLayout_2.setColumnAutoSizing(3, true);
					formLayout_2.setColumnAutoSizing(5, true);
					formLayout_2.setRows(["1fr"]);
					group_5.setLayout(formLayout_2);
					(function(container){
						var output_6 = new cpr.controls.Output("difficultyValue");
						output_6.value = "Output";
						container.addChild(output_6, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_7 = new cpr.controls.Output("cookingTimeValue");
						output_7.value = "Output";
						container.addChild(output_7, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_8 = new cpr.controls.Output("caloriesValue");
						output_8.value = "Output";
						container.addChild(output_8, {
							"colIndex": 5,
							"rowIndex": 0
						});
						var image_2 = new cpr.controls.Image("difficultyImg");
						image_2.src = "theme/images/difficullty.svg";
						container.addChild(image_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var image_3 = new cpr.controls.Image("cookingTimeImg");
						image_3.src = "theme/images/clock.svg";
						container.addChild(image_3, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var image_4 = new cpr.controls.Image("caloriesImg");
						image_4.src = "theme/images/calories.svg";
						container.addChild(image_4, {
							"colIndex": 4,
							"rowIndex": 0
						});
					})(group_5);
					container.addChild(group_5, {
						"top": "0px",
						"bottom": "0px",
						"left": "0px",
						"width": "400px"
					});
					var group_6 = new cpr.controls.Container("recipeAuthor");
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.scrollable = false;
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.setColumns(["30px", "100px"]);
					formLayout_3.setColumnAutoSizing(1, true);
					formLayout_3.setRows(["1fr"]);
					group_6.setLayout(formLayout_3);
					(function(container){
						var image_5 = new cpr.controls.Image("recipeAuthorImg");
						container.addChild(image_5, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_9 = new cpr.controls.Output("recipeAuthorName");
						output_9.value = "Output";
						container.addChild(output_9, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"width": "130px"
					});
				})(group_4);
				container.addChild(group_4, {
					"width": "100%",
					"height": "30px"
				});
				var group_7 = new cpr.controls.Container("InteractionBtnGroup");
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.scrollable = false;
				formLayout_4.horizontalSpacing = "40px";
				formLayout_4.verticalSpacing = "0px";
				formLayout_4.topMargin = "0px";
				formLayout_4.rightMargin = "0px";
				formLayout_4.bottomMargin = "0px";
				formLayout_4.leftMargin = "0px";
				formLayout_4.setColumns(["1fr", "1fr", "1fr", "1fr"]);
				formLayout_4.setColumnMinWidth(0, 100);
				formLayout_4.setColumnMinWidth(1, 100);
				formLayout_4.setColumnMinWidth(2, 100);
				formLayout_4.setColumnMinWidth(3, 100);
				formLayout_4.setRows(["1fr"]);
				formLayout_4.setRowMinHeight(0, 100);
				group_7.setLayout(formLayout_4);
				(function(container){
					var group_8 = new cpr.controls.Container("likeCountGroup");
					var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_2.spacing = 10;
					group_8.setLayout(verticalLayout_2);
					(function(container){
						var image_6 = new cpr.controls.Image("likeCountImg");
						image_6.src = "theme/images/heart_empty.svg";
						container.addChild(image_6, {
							"width": "70px",
							"height": "70px"
						});
						var output_10 = new cpr.controls.Output("likeCountValue");
						output_10.value = "Output";
						output_10.style.css({
							"text-align" : "center"
						});
						container.addChild(output_10, {
							"width": "100px",
							"height": "20px"
						});
					})(group_8);
					container.addChild(group_8, {
						"colIndex": 0,
						"rowIndex": 0,
						"horizontalAlign": "center",
						"verticalAlign": "fill"
					});
					var group_9 = new cpr.controls.Container("viewCountGroup");
					var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_3.spacing = 10;
					group_9.setLayout(verticalLayout_3);
					(function(container){
						var image_7 = new cpr.controls.Image("viewCountImg");
						image_7.src = "theme/images/view.svg";
						container.addChild(image_7, {
							"width": "70px",
							"height": "70px"
						});
						var output_11 = new cpr.controls.Output("viewCountValue");
						output_11.value = "Output";
						output_11.style.css({
							"text-align" : "center"
						});
						container.addChild(output_11, {
							"width": "100px",
							"height": "20px"
						});
					})(group_9);
					container.addChild(group_9, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_10 = new cpr.controls.Container("applicationGroup");
					var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_4.spacing = 10;
					group_10.setLayout(verticalLayout_4);
					(function(container){
						var image_8 = new cpr.controls.Image("applicationImg");
						image_8.src = "theme/images/write.svg";
						container.addChild(image_8, {
							"width": "70px",
							"height": "70px"
						});
						var output_12 = new cpr.controls.Output("applicationValue");
						output_12.value = "레시피 응용하기";
						output_12.style.css({
							"text-align" : "center"
						});
						container.addChild(output_12, {
							"width": "100px",
							"height": "20px"
						});
					})(group_10);
					container.addChild(group_10, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var group_11 = new cpr.controls.Container("shareGroup");
					var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_5.spacing = 10;
					group_11.setLayout(verticalLayout_5);
					(function(container){
						var image_9 = new cpr.controls.Image("shareImg");
						image_9.src = "theme/images/share.svg";
						container.addChild(image_9, {
							"width": "70px",
							"height": "70px"
						});
						var output_13 = new cpr.controls.Output("shareValue");
						output_13.value = "공유하기";
						output_13.style.css({
							"text-align" : "center"
						});
						container.addChild(output_13, {
							"width": "100px",
							"height": "20px"
						});
					})(group_11);
					container.addChild(group_11, {
						"colIndex": 2,
						"rowIndex": 0
					});
				})(group_7);
				container.addChild(group_7, {
					"width": "400px",
					"height": "100px"
				});
				var group_12 = new cpr.controls.Container();
				group_12.style.css({
					"border-radius" : "5px",
					"background-color" : "#FBF3EB"
				});
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_12.setLayout(xYLayout_3);
				(function(container){
					var group_13 = new cpr.controls.Container();
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					group_13.setLayout(verticalLayout_6);
					(function(container){
						var userDefinedControl_1 = new udc.recipe.group_subtitle();
						userDefinedControl_1.value = "재료";
						container.addChild(userDefinedControl_1, {
							"width": "580px",
							"height": "20px"
						});
						var group_14 = new cpr.controls.Container("ingredientGroup");
						var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
						group_14.setLayout(flowLayout_1);
						container.addChild(group_14, {
							"autoSize": "height",
							"width": "500px",
							"height": "200px"
						});
					})(group_13);
					container.addChild(group_13, {
						"top": "20px",
						"right": "10px",
						"bottom": "20px",
						"left": "10px"
					});
				})(group_12);
				container.addChild(group_12, {
					"width": "400px",
					"height": "200px"
				});
				var group_15 = new cpr.controls.Container();
				group_15.style.css({
					"background-color" : "#E5E6C7"
				});
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				group_15.setLayout(verticalLayout_7);
				(function(container){
					var group_16 = new cpr.controls.Container();
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.leftMargin = 10;
					verticalLayout_8.rightMargin = 10;
					verticalLayout_8.topMargin = 20;
					verticalLayout_8.bottomMargin = 20;
					group_16.setLayout(verticalLayout_8);
					(function(container){
						var userDefinedControl_2 = new udc.recipe.group_subtitle();
						userDefinedControl_2.value = "요리 과정";
						container.addChild(userDefinedControl_2, {
							"width": "580px",
							"height": "20px"
						});
						var group_17 = new cpr.controls.Container("cookingProcessGroup");
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						group_17.setLayout(verticalLayout_9);
						container.addChild(group_17, {
							"autoSize": "height",
							"width": "100%",
							"height": "100px"
						});
					})(group_16);
					container.addChild(group_16, {
						"autoSize": "height",
						"width": "580px",
						"height": "180px"
					});
				})(group_15);
				container.addChild(group_15, {
					"autoSize": "height",
					"width": "400px",
					"height": "200px"
				});
				var group_18 = new cpr.controls.Container();
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.scrollable = false;
				formLayout_5.horizontalSpacing = "0px";
				formLayout_5.verticalSpacing = "0px";
				formLayout_5.topMargin = "0px";
				formLayout_5.rightMargin = "0px";
				formLayout_5.bottomMargin = "0px";
				formLayout_5.leftMargin = "0px";
				formLayout_5.setColumns(["50px", "100px", "50px", "100px", "1fr"]);
				formLayout_5.setRows(["25px"]);
				group_18.setLayout(formLayout_5);
				(function(container){
					var output_14 = new cpr.controls.Output();
					output_14.value = "등록일";
					container.addChild(output_14, {
						"colIndex": 0,
						"rowIndex": 0,
						"verticalAlign": "fill"
					});
					var output_15 = new cpr.controls.Output("updatedAtLabel");
					output_15.visible = false;
					output_15.value = "수정일";
					container.addChild(output_15, {
						"colIndex": 2,
						"rowIndex": 0,
						"verticalAlign": "fill"
					});
					var output_16 = new cpr.controls.Output("createdAt");
					output_16.value = "Output";
					container.addChild(output_16, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_17 = new cpr.controls.Output("updatedAt");
					output_17.visible = false;
					output_17.value = "Output";
					container.addChild(output_17, {
						"colIndex": 3,
						"rowIndex": 0
					});
				})(group_18);
				container.addChild(group_18, {
					"width": "400px",
					"height": "25px"
				});
				var group_19 = new cpr.controls.Container();
				group_19.visible = false;
				group_19.style.css({
					"background-color" : "#fbdbcf",
					"background-image" : "none"
				});
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_19.setLayout(xYLayout_4);
				(function(container){
					var group_20 = new cpr.controls.Container();
					var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
					group_20.setLayout(verticalLayout_10);
					(function(container){
						var userDefinedControl_3 = new udc.recipe.group_subtitle();
						userDefinedControl_3.value = "영양소 분석결과";
						container.addChild(userDefinedControl_3, {
							"width": "580px",
							"height": "20px"
						});
					})(group_20);
					container.addChild(group_20, {
						"top": "10px",
						"right": "10px",
						"bottom": "30px",
						"left": "10px"
					});
				})(group_19);
				container.addChild(group_19, {
					"autoSize": "height",
					"width": "600px",
					"height": "200px"
				});
				var group_21 = new cpr.controls.Container();
				group_21.style.css({
					"background-color" : "#eaf1f3",
					"background-image" : "none"
				});
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_21.setLayout(xYLayout_5);
				(function(container){
					var group_22 = new cpr.controls.Container();
					var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
					group_22.setLayout(verticalLayout_11);
					(function(container){
						var userDefinedControl_4 = new udc.recipe.group_subtitle();
						userDefinedControl_4.value = "댓글";
						container.addChild(userDefinedControl_4, {
							"width": "580px",
							"height": "20px"
						});
						var group_23 = new cpr.controls.Container("commentList");
						var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
						group_23.setLayout(verticalLayout_12);
						container.addChild(group_23, {
							"autoSize": "height",
							"width": "400px",
							"height": "10px"
						});
						var group_24 = new cpr.controls.Container();
						var formLayout_6 = new cpr.controls.layouts.FormLayout();
						formLayout_6.scrollable = false;
						formLayout_6.horizontalSpacing = "0px";
						formLayout_6.verticalSpacing = "0px";
						formLayout_6.topMargin = "0px";
						formLayout_6.rightMargin = "0px";
						formLayout_6.bottomMargin = "0px";
						formLayout_6.leftMargin = "0px";
						formLayout_6.setColumns(["1fr", "10px", "50px"]);
						formLayout_6.setRows(["30px"]);
						group_24.setLayout(formLayout_6);
						(function(container){
							var inputBox_1 = new cpr.controls.InputBox("ipb1");
							inputBox_1.placeholder = "레시피에 대한 의견을 남겨보세요!";
							container.addChild(inputBox_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var button_1 = new cpr.controls.Button();
							button_1.value = "등록";
							container.addChild(button_1, {
								"colIndex": 2,
								"rowIndex": 0
							});
						})(group_24);
						container.addChild(group_24, {
							"width": "400px",
							"height": "30px"
						});
					})(group_22);
					container.addChild(group_22, {
						"top": "10px",
						"right": "10px",
						"bottom": "30px",
						"left": "10px"
					});
				})(group_21);
				container.addChild(group_21, {
					"autoSize": "height",
					"width": "600px",
					"height": "200px"
				});
			})(group_1);
			container.addChild(group_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "2000px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "2000px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "2000px"
					}
				]
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "recipe_detail";
	cpr.core.Platform.INSTANCE.register(app);
})();
