/*
 * App URI: app/recipe/recipe_main
 * Source Location: app/recipe/recipe_main.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5481), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/recipe/recipe_main", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * contents_container.js
			 * Created at 2025. 4. 17. 오후 1:52:50.
			 *
			 * @author gyrud
			 ************************************************/

			const createRecipeCardModule = cpr.core.Module.require("module/recipe/createRecipeCard");
			const createRecipeCard = createRecipeCardModule.createRecipeCard;
			const setRecipeListModule = cpr.core.Module.require("module/recipe/setRecipeList");
			const setRecipeList = setRecipeListModule.setRecipeList;

			let sortBy = null;
			let sortType = null;
			const size = 6;

			// 레시피 정렬 조회 요청
			const onSortRecipeListSmsSubmit=(page)=>{
				const sortRecipeListSms = app.lookup("sortRecipeListSms");
				sortRecipeListSms.addParameter("page", page);
				sortRecipeListSms.addParameter("size", size);
				sortRecipeListSms.addParameter("sortBy", sortBy);
				sortRecipeListSms.addParameter("sortType", sortType);
				sortRecipeListSms.send();
				sortRecipeListSms.removeAllParameters();
			}

			// 레시피 목록 화면 변경
			const setRecipeList=(submission)=> {
				const recipeContainer = app.lookup("allRecipeList");
				
				if(recipeContainer.getChildrenCount()){
					recipeContainer.removeAllChildren();
				}
				
				const recipeGroup = app.lookup("allRecipeListPageGroup");
				const pageIndexer = app.lookup("allRecipePageIndexer");
				
				const result = submission.xhr.responseText;
				const resultJson = JSON.parse(result);
				
				createRecipeCard(resultJson.content, recipeContainer);
				
				pageIndexer.init(resultJson.totalElements, resultJson.size, (resultJson.number)+1);
					
				recipeGroup.redraw();
			}

			// 레시피 목록 조회 초기화
			const initRecipeList = () => {
				const allRecipeListSms = app.lookup("allRecipeListSms");
				allRecipeListSms.addParameter("page", 0);
				allRecipeListSms.addParameter("size", size);
				allRecipeListSms.send();
				allRecipeListSms.removeAllParameters();
			}


			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				const popularRecipeListSms = app.lookup("popularRecipeListSms");
				popularRecipeListSms.send();
				
				initRecipeList();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onPopularRecipeListSmsSubmitSuccess(e){
				const popularRecipeListSms = e.control;
				
				const recipeContainer = app.lookup("popluarRecipeList"); 

				const result = popularRecipeListSms.xhr.responseText;
				const resultJson = JSON.parse(result);
				
				createRecipeCard(resultJson, recipeContainer);

				recipeContainer.redraw();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onAllRecipeListSmsSubmitSuccess(e){
				const allRecipeListSms = e.control;
				
				const recipeContainer = app.lookup("allRecipeList");
				const recipeGroup = app.lookup("allRecipeListPageGroup");
				const pageIndexer = app.lookup("allRecipePageIndexer");

				setRecipeList(allRecipeListSms, recipeContainer, recipeGroup, pageIndexer);
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSortRecipeListSmsSubmitSuccess(e){
				const sortRecipeListSms = e.control;
				
				const recipeContainer = app.lookup("allRecipeList");
				const recipeGroup = app.lookup("allRecipeListPageGroup");
				const pageIndexer = app.lookup("allRecipePageIndexer");
				
				setRecipeList(sortRecipeListSms, recipeContainer, recipeGroup, pageIndexer);
			}

			/*
			 * 페이지 인덱서에서 selection-change 이벤트 발생 시 호출.
			 * Page index를 선택하여 선택된 페이지가 변경된 후에 발생하는 이벤트.
			 */
			function onAllRecipePageIndexerSelectionChange(e){
				var allRecipePageIndexer = e.control;
				
				const page = Number(allRecipePageIndexer.currentPageIndex)-1;
				
				if(sortType==null){
					const allRecipeListSms = app.lookup("allRecipeListSms");
					allRecipeListSms.addParameter("page", page);
					allRecipeListSms.addParameter("size", size);
					allRecipeListSms.send();
					allRecipeListSms.removeAllParameters();	
				} else {
					onSortRecipeListSmsSubmit(page);
				}
			}

			/*
			 * 사용자 정의 컨트롤에서 item-click 이벤트 발생 시 호출.
			 */
			function onRecipe_sort_selectItemClick(e){
				const recipeSortSelect = e.control;
				
				const recipeSortSelectItem = recipeSortSelect.getSortSelectItemValue();
					
				if(recipeSortSelectItem) {
					[sortBy, sortType] = recipeSortSelectItem;
					onSortRecipeListSmsSubmit(0, 6);
				}
			}

			/*
			 * 사용자 정의 컨트롤에서 reset 이벤트 발생 시 호출.
			 */
			function onRecipe_sort_selectReset(e){
				const recipeSortSelect = e.control;
				
				recipeSortSelect.resetRecipeSortSelectBoxItem();
				initRecipeList();
			};
			// End - User Script
			
			// Header
			var submission_1 = new cpr.protocols.Submission("popularRecipeListSms");
			submission_1.action = "/api/recipes/popular";
			if(typeof onPopularRecipeListSmsSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onPopularRecipeListSmsSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("allRecipeListSms");
			submission_2.action = "/api/recipes";
			submission_2.mediaType = "application/json;massdata";
			if(typeof onAllRecipeListSmsSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onAllRecipeListSmsSubmitSuccess);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("sortRecipeListSms");
			submission_3.action = "/api/recipes/sort";
			if(typeof onSortRecipeListSmsSubmitSuccess == "function") {
				submission_3.addEventListener("submit-success", onSortRecipeListSmsSubmitSuccess);
			}
			app.register(submission_3);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["contents-container"]);
			container.style.css({
				"background-color" : "#FFFFFF",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			responsiveXYLayout_1.scrollable = true;
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("popluarRecipeContainer");
			group_1.clipContent = false;
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.scrollable = false;
			verticalLayout_1.spacing = 20;
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var userDefinedControl_1 = new udc.recipe.recipe_title("popluarRecipeTitle");
				userDefinedControl_1.value = "인기 레시피";
				container.addChild(userDefinedControl_1, {
					"autoSize": "none",
					"width": "600px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("popluarRecipeList");
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				flowLayout_1.scrollable = false;
				flowLayout_1.horizontalSpacing = 20;
				flowLayout_1.verticalSpacing = 20;
				flowLayout_1.horizontalAlign = "center";
				flowLayout_1.verticalAlign = "top";
				flowLayout_1.lineWrap = true;
				flowLayout_1.maxContentWidth = -1;
				group_2.setLayout(flowLayout_1);
				if(typeof onPopluarRecipeListBeforeDraw == "function") {
					group_2.addEventListener("before-draw", onPopluarRecipeListBeforeDraw);
				}
				container.addChild(group_2, {
					"autoSize": "none",
					"width": "600px",
					"height": "400px"
				});
			})(group_1);
			container.addChild(group_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "450px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "450px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "0px",
						"right": "0px",
						"left": "0px",
						"height": "450px"
					}
				]
			});
			
			var group_3 = new cpr.controls.Container("allRecipeContainer");
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 20;
			group_3.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_2 = new udc.recipe.recipe_title("allRecipeTitle");
				userDefinedControl_2.value = "모든 레시피";
				container.addChild(userDefinedControl_2, {
					"width": "600px",
					"height": "30px"
				});
				var userDefinedControl_3 = new udc.recipe.recipe_sort_select();
				if(typeof onRecipe_sort_selectItemClick == "function") {
					userDefinedControl_3.addEventListener("item-click", onRecipe_sort_selectItemClick);
				}
				if(typeof onRecipe_sort_selectReset == "function") {
					userDefinedControl_3.addEventListener("reset", onRecipe_sort_selectReset);
				}
				container.addChild(userDefinedControl_3, {
					"autoSize": "both",
					"width": "600px",
					"height": "30px"
				});
				var group_4 = new cpr.controls.Container("allRecipeListPageGroup");
				var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_3.spacing = 10;
				group_4.setLayout(verticalLayout_3);
				(function(container){
					var group_5 = new cpr.controls.Container("allRecipeList");
					var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
					flowLayout_2.scrollable = false;
					flowLayout_2.horizontalSpacing = 20;
					flowLayout_2.verticalSpacing = 20;
					flowLayout_2.horizontalAlign = "center";
					flowLayout_2.verticalAlign = "top";
					flowLayout_2.lineWrap = true;
					flowLayout_2.maxContentWidth = -1;
					group_5.setLayout(flowLayout_2);
					container.addChild(group_5, {
						"autoSize": "height",
						"width": "600px",
						"height": "0px"
					});
					var pageIndexer_1 = new cpr.controls.PageIndexer("allRecipePageIndexer");
					pageIndexer_1.pageRowCount = 6;
					pageIndexer_1.init(1, 1, 1);
					if(typeof onAllRecipePageIndexerSelectionChange == "function") {
						pageIndexer_1.addEventListener("selection-change", onAllRecipePageIndexerSelectionChange);
					}
					container.addChild(pageIndexer_1, {
						"autoSize": "none",
						"width": "600px",
						"height": "40px"
					});
				})(group_4);
				container.addChild(group_4, {
					"autoSize": "height",
					"width": "600px",
					"height": "200px"
				});
			})(group_3);
			container.addChild(group_3, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "500px",
						"right": "0px",
						"left": "0px",
						"height": "1400px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
						"top": "500px",
						"right": "0px",
						"left": "0px",
						"height": "1400px"
					}, 
					{
						"media": "all and (max-width: 499.984px)",
						"top": "500px",
						"right": "0px",
						"left": "0px",
						"height": "1400px"
					}
				]
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "recipe_main";
	cpr.core.Platform.INSTANCE.register(app);
})();
