/*
 * App URI: app/recipe/recipe_search
 * Source Location: app/recipe/recipe_search.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/recipe/recipe_search", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * contents_container.js
			 * Created at 2025. 4. 17. 오후 1:52:50.
			 *
			 * @author gyrud
			 ************************************************/

			const setRecipeListModule = cpr.core.Module.require("module/recipe/setRecipeList");
			const setRecipeList = setRecipeListModule.setRecipeList;

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */

			const size = 10;

			const submitSms=(page)=> {
				const searchRecipeListSms = app.lookup("searchRecipeListSms");
				const searchParams = new URLSearchParams(window.location.search);
				const keyword = searchParams.get('keyword');
				console.log(keyword);
				searchRecipeListSms.setRequestActionUrl(`${searchRecipeListSms.action}?keyword=${keyword}&page=${page}&size=${size}`);
				searchRecipeListSms.send();
			}

			function onBodyLoad(e){
				const searchRecipeListSms = app.lookup("searchRecipeListSms");
				submitSms(0);
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSearchRecipeListSmsSubmitSuccess(e){
				const searchRecipeListSms = e.control;
				
				const recipeContainer = app.lookup("allRecipeList");
				const recipeGroup = app.lookup("allRecipeListPageGroup");
				const pageIndexer = app.lookup("allRecipePageIndexer");

				setRecipeList(searchRecipeListSms, recipeContainer, recipeGroup, pageIndexer);
			}

			/*
			 * 페이지 인덱서에서 selection-change 이벤트 발생 시 호출.
			 * Page index를 선택하여 선택된 페이지가 변경된 후에 발생하는 이벤트.
			 */
			function onAllRecipePageIndexerSelectionChange(e){
				var allRecipePageIndexer = e.control;
				
				const page = Number(allRecipePageIndexer.currentPageIndex)-1;
				submitSms(page);
			};
			// End - User Script
			
			// Header
			var submission_1 = new cpr.protocols.Submission("searchRecipeListSms");
			submission_1.action = "/api/recipes/search";
			submission_1.mediaType = "application/json;massdata";
			if(typeof onSearchRecipeListSmsSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSearchRecipeListSmsSubmitSuccess);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["contents-container"]);
			container.style.css({
				"background-color" : "#FFFFFF",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 20;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.recipe.recipe_search_form();
			container.addChild(userDefinedControl_1, {
				"width": "600px",
				"height": "55px"
			});
			
			var group_1 = new cpr.controls.Container("allRecipeListPageGroup");
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 10;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("allRecipeList");
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				flowLayout_1.scrollable = false;
				flowLayout_1.horizontalSpacing = 20;
				flowLayout_1.verticalSpacing = 20;
				flowLayout_1.horizontalAlign = "center";
				flowLayout_1.verticalAlign = "top";
				flowLayout_1.lineWrap = true;
				flowLayout_1.maxContentWidth = -1;
				group_2.setLayout(flowLayout_1);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "600px",
					"height": "0px"
				});
				var pageIndexer_1 = new cpr.controls.PageIndexer("allRecipePageIndexer");
				pageIndexer_1.pageRowCount = 10;
				if(typeof onAllRecipePageIndexerSelectionChange == "function") {
					pageIndexer_1.addEventListener("selection-change", onAllRecipePageIndexerSelectionChange);
				}
				container.addChild(pageIndexer_1, {
					"autoSize": "none",
					"width": "600px",
					"height": "40px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "600px",
				"height": "200px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "recipe_search";
	cpr.core.Platform.INSTANCE.register(app);
})();
