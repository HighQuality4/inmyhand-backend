/*
 * App URI: app/layout/layout
 * Source Location: app/layout/layout.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5545), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/layout/layout", { 
		onPrepare: function(loader) {
			loader.addCSS("theme/custom/layout.part.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * layout.js
			 * Created at 2025. 4. 10. 오후 6:42:47.
			 *
			 * @author gyrud
			 ************************************************/

			const embeddedRoutesModule = cpr.core.Module.require("data/embeddedRoutes");
			const embeddedRoutes = embeddedRoutesModule.embeddedRoutes;


			const embeddedAppChange = () => {
				app.lookup("isLoggedInSms").send();
				const pathName = window.location.pathname;
				
				const match = embeddedRoutes.find(route => {
				  if (typeof route.path === "string") {
				    return route.path === pathName;
				  } else if (route.path instanceof RegExp) {
				    return route.path.test(pathName);
				  }
				  return false;
				});
				
				
				if (match != null) {
					const vsAppId = match.loadApp;
					const vcEmb = app.lookup("ea1");
					
					const oldAppInstance = vcEmb.getEmbeddedAppInstance();
					if(oldAppInstance) {
						oldAppInstance.dispose();
					}
					
					cpr.core.App.load(vsAppId, function(loadedApp){ 
						vcEmb.app = loadedApp;
					});
					
					app.getContainer().redraw(); 
				}
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){ 
				embeddedAppChange();
				app.lookup("adminCheckSms").send();
				app.lookup("isLoggedInSms").send();
				//TODO: 로그인 여부 판단해서 버튼 교체 로직 넣을 것
			}

			/* nav바 버튼 클릭 시 화면 이동 */
			const navClickEvent=(e)=>{
				history.pushState({}, '', e.control.userAttr("route"));
			}
			function onHomeClick(e){navClickEvent(e);}
			function onFridgeClick(e){navClickEvent(e);}
			function onRecipeClick(e){navClickEvent(e);}
			function onAuthClick(e){navClickEvent(e);}

			// URL 변경 감지
			(function(history) {
			    var pushState = history.pushState;
			    var replaceState = history.replaceState;

			    history.pushState = function(state) {
			        var result = pushState.apply(history, arguments);
			        if (typeof history.onpushstate == "function") {
			            history.onpushstate({state: state});
			        }
			        return result;
			    };

			    history.replaceState = function(state) {
			        var result = replaceState.apply(history, arguments);
			        if (typeof history.onreplacestate == "function") {
			            history.onreplacestate({state: state});
			        }
			        return result;
			    };
			})(window.history);

			// pushState 감지
			history.onpushstate = function(e) {
			    embeddedAppChange();
			};

			// replaceState 감지
			history.onreplacestate = function(e) {
			    embeddedAppChange();
			};

			// 뒤로 가기, 앞으로 가기 감지
			window.addEventListener('popstate', function(event) {
			    embeddedAppChange();
			});

			/*
			 * 그룹에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onAdminpotoClick(e){
				var adminpoto = e.control;
			    window.location.href = "/admin/user";
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onAdminCheckSmsSubmitSuccess(e){
				var adminCheckSms = e.control;
				var adminGroup = app.lookup("adminpoto");
				let check = app.lookup("adcheck");
				let result = check.getValue("check");
				if (result === "1") {
					  adminGroup.visible = true;
			        } else {
				     adminGroup.visible = false;
				}
				
				adminGroup.redraw();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onIsLoggedInSmsSubmitSuccess(e){
				const isLoggedInSms = e.control;
				
				const result = isLoggedInSms.xhr.responseText;
				const resultJson = JSON.parse(result);
				
				if(resultJson){
					const auth = app.lookup("auth");
					const authOutput = app.lookup("authOutput");
					const authImg = app.lookup("authImg");
					authOutput.value = "마이페이지";
					authImg.src = "theme/images/user.svg";
					auth.userAttr("route", "/users/mypage");
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("embeddedRoutes");
			dataSet_1.parseData({
				"columns" : [
					{"name": "path"},
					{"name": "app"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("adcheck");
			dataMap_1.parseData({
				"columns" : [{"name": "check"}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "/api/page-routes";
			submission_1.mediaType = "application/json";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSms1Receive2 == "function") {
				submission_1.addEventListener("receive", onSms1Receive2);
			}
			if(typeof onSms1SubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("adminCheckSms");
			submission_2.action = "/api/admin/check";
			submission_2.mediaType = "application/json";
			submission_2.addResponseData(dataMap_1, false);
			if(typeof onAdminCheckSmsSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onAdminCheckSmsSubmitSuccess);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("isLoggedInSms");
			submission_3.withCredentials = true;
			submission_3.action = "/api/users/login/check";
			if(typeof onIsLoggedInSmsSubmitSuccess == "function") {
				submission_3.addEventListener("submit-success", onIsLoggedInSmsSubmitSuccess);
			}
			app.register(submission_3);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
			app.supportMedia("all and (max-width: 499.984px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"background-color" : "#F3F1F0",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("layout-container");
			group_1.style.setClasses(["layout-container"]);
			group_1.style.css({
				"box-shadow" : "0 2px 6px rgba(0, 0, 0, 0.1)"
			});
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 0;
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("header");
				group_2.style.css({
					"background-color" : "#FBF3EB"
				});
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.scrollable = false;
				formLayout_1.horizontalSpacing = "0px";
				formLayout_1.verticalSpacing = "0px";
				formLayout_1.topMargin = "0px";
				formLayout_1.rightMargin = "0px";
				formLayout_1.bottomMargin = "0px";
				formLayout_1.leftMargin = "0px";
				formLayout_1.setColumns(["40px", "1fr", "48px", "10px", "48px", "10px", "48px", "40px"]);
				formLayout_1.setRows(["10px", "1fr", "10px"]);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "내손안의 냉장고";
					output_1.style.css({
						"color" : "#856C66",
						"font-weight" : "bold",
						"font-size" : "20px",
						"font-family" : "Kim jung chul Myungjo Regular"
					});
					container.addChild(output_1, {
						"colIndex": 1,
						"rowIndex": 1,
						"colSpan": 1,
						"rowSpan": 1
					});
					var group_3 = new cpr.controls.Container("recipeRegistration");
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["35px", "5px", "1fr"]);
					group_3.setLayout(formLayout_2);
					(function(container){
						var image_1 = new cpr.controls.Image();
						image_1.src = "theme/images/recipe_registration.svg";
						container.addChild(image_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "레시피 등록";
						output_2.style.setClasses(["page-nav"]);
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 2
						});
					})(group_3);
					if(typeof onRecipeRegistrationClick == "function") {
						group_3.addEventListener("click", onRecipeRegistrationClick);
					}
					container.addChild(group_3, {
						"colIndex": 6,
						"rowIndex": 1,
						"colSpan": 1,
						"rowSpan": 1,
						"width": 100,
						"height": 9
					});
					var group_4 = new cpr.controls.Container("receiptPhoto");
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.scrollable = false;
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["35px", "5px", "1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var image_2 = new cpr.controls.Image();
						image_2.src = "theme/images/receipt_photo.svg";
						container.addChild(image_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_3 = new cpr.controls.Output();
						output_3.value = "영수증 촬영";
						output_3.style.setClasses(["page-nav"]);
						container.addChild(output_3, {
							"colIndex": 0,
							"rowIndex": 2
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 4,
						"rowIndex": 1,
						"colSpan": 1,
						"rowSpan": 1
					});
					var group_5 = new cpr.controls.Container("adminpoto");
					group_5.visible = false;
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.scrollable = false;
					formLayout_4.horizontalSpacing = "0px";
					formLayout_4.verticalSpacing = "0px";
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["35px", "5px", "1fr"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var output_4 = new cpr.controls.Output();
						output_4.value = "어드민";
						output_4.style.setClasses(["page-nav"]);
						container.addChild(output_4, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var image_3 = new cpr.controls.Image();
						image_3.src = "theme/images/user.svg";
						container.addChild(image_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_5);
					if(typeof onAdminpotoClick == "function") {
						group_5.addEventListener("click", onAdminpotoClick);
					}
					container.addChild(group_5, {
						"colIndex": 2,
						"rowIndex": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "width",
					"width": "100%",
					"height": "73px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
				container.addChild(embeddedApp_1, {
					"autoSize": "none",
					"width": "100%",
					"height": "calc(100% - 143px)"
				});
				var group_6 = new cpr.controls.Container("footer");
				group_6.style.setClasses(["page-nav"]);
				group_6.style.css({
					"background-color" : "#FFFFFF"
				});
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.scrollable = false;
				formLayout_5.horizontalSpacing = "0px";
				formLayout_5.verticalSpacing = "0px";
				formLayout_5.topMargin = "0px";
				formLayout_5.rightMargin = "0px";
				formLayout_5.bottomMargin = "0px";
				formLayout_5.leftMargin = "0px";
				formLayout_5.setColumns(["40px", "60px", "1fr", "60px", "1fr", "60px", "1fr", "60px", "40px"]);
				formLayout_5.setRows(["10px", "50px", "10px"]);
				group_6.setLayout(formLayout_5);
				(function(container){
					var group_7 = new cpr.controls.Container("home");
					group_7.userAttr({"route": "/"});
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.scrollable = false;
					formLayout_6.horizontalSpacing = "0px";
					formLayout_6.verticalSpacing = "0px";
					formLayout_6.topMargin = "0px";
					formLayout_6.rightMargin = "0px";
					formLayout_6.bottomMargin = "0px";
					formLayout_6.leftMargin = "0px";
					formLayout_6.setColumns(["1fr"]);
					formLayout_6.setRows(["30px", "1fr"]);
					group_7.setLayout(formLayout_6);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "홈";
						output_5.style.setClasses(["page-nav"]);
						container.addChild(output_5, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var image_4 = new cpr.controls.Image();
						image_4.src = "theme/images/home.svg";
						container.addChild(image_4, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "center",
							"verticalAlign": "center",
							"width": 30,
							"height": 30
						});
					})(group_7);
					if(typeof onHomeDblclick == "function") {
						group_7.addEventListener("dblclick", onHomeDblclick);
					}
					if(typeof onHomeClick == "function") {
						group_7.addEventListener("click", onHomeClick);
					}
					container.addChild(group_7, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var group_8 = new cpr.controls.Container("fridge");
					group_8.userAttr({"route": "/fridge"});
					var formLayout_7 = new cpr.controls.layouts.FormLayout();
					formLayout_7.scrollable = false;
					formLayout_7.horizontalSpacing = "0px";
					formLayout_7.verticalSpacing = "0px";
					formLayout_7.topMargin = "0px";
					formLayout_7.rightMargin = "0px";
					formLayout_7.bottomMargin = "0px";
					formLayout_7.leftMargin = "0px";
					formLayout_7.setColumns(["1fr"]);
					formLayout_7.setRows(["30px", "1fr"]);
					group_8.setLayout(formLayout_7);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.value = "냉장고";
						output_6.style.setClasses(["page-nav"]);
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var image_5 = new cpr.controls.Image();
						image_5.src = "theme/images/refrigerator.svg";
						container.addChild(image_5, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "center",
							"verticalAlign": "center",
							"width": 30,
							"height": 30
						});
					})(group_8);
					if(typeof onFridgeClick == "function") {
						group_8.addEventListener("click", onFridgeClick);
					}
					container.addChild(group_8, {
						"colIndex": 3,
						"rowIndex": 1
					});
					var group_9 = new cpr.controls.Container("recipe");
					group_9.userAttr({"route": "/recipe"});
					var formLayout_8 = new cpr.controls.layouts.FormLayout();
					formLayout_8.scrollable = false;
					formLayout_8.horizontalSpacing = "0px";
					formLayout_8.verticalSpacing = "0px";
					formLayout_8.topMargin = "0px";
					formLayout_8.rightMargin = "0px";
					formLayout_8.bottomMargin = "0px";
					formLayout_8.leftMargin = "0px";
					formLayout_8.setColumns(["1fr"]);
					formLayout_8.setRows(["30px", "1fr"]);
					group_9.setLayout(formLayout_8);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "레시피";
						output_7.style.setClasses(["page-nav"]);
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var image_6 = new cpr.controls.Image();
						image_6.src = "theme/images/recipe.svg";
						container.addChild(image_6, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "center",
							"verticalAlign": "center",
							"width": 30,
							"height": 30
						});
					})(group_9);
					if(typeof onRecipeClick == "function") {
						group_9.addEventListener("click", onRecipeClick);
					}
					container.addChild(group_9, {
						"colIndex": 5,
						"rowIndex": 1
					});
					var group_10 = new cpr.controls.Container("auth");
					group_10.userAttr({"route": "/auth/login"});
					var formLayout_9 = new cpr.controls.layouts.FormLayout();
					formLayout_9.scrollable = false;
					formLayout_9.horizontalSpacing = "0px";
					formLayout_9.verticalSpacing = "0px";
					formLayout_9.topMargin = "0px";
					formLayout_9.rightMargin = "0px";
					formLayout_9.bottomMargin = "0px";
					formLayout_9.leftMargin = "0px";
					formLayout_9.setColumns(["1fr"]);
					formLayout_9.setRows(["30px", "1fr"]);
					group_10.setLayout(formLayout_9);
					(function(container){
						var output_8 = new cpr.controls.Output("authOutput");
						output_8.value = "로그인";
						output_8.style.setClasses(["page-nav"]);
						container.addChild(output_8, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var image_7 = new cpr.controls.Image("authImg");
						image_7.src = "theme/images/login.svg";
						container.addChild(image_7, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "center",
							"verticalAlign": "center",
							"width": 30,
							"height": 30
						});
					})(group_10);
					if(typeof onAuthClick == "function") {
						group_10.addEventListener("click", onAuthClick);
					}
					container.addChild(group_10, {
						"colIndex": 7,
						"rowIndex": 1
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "width",
					"width": "600px",
					"height": "70px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"bottom": "0px",
				"width": "600px",
				"left": "calc(50% - 300px)"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "layout";
	cpr.core.Platform.INSTANCE.register(app);
})();
