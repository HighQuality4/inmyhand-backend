/// start - udc.footer
/*
 * UDC Qualified Name: udc.footer
 * App URI: udc/footer
 * Source Location: udc/footer.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5481), Don't edit manually.
 */

/// end - udc.header
/// start - udc.recipe.recipe_card
/*
 * UDC Qualified Name: udc.recipe.recipe_card
 * App URI: udc/recipe/recipe_card
 * Source Location: udc/recipe/recipe_card.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5481), Don't edit manually.
 */
(function(){
	// App Declaration
		var internalApp = new cpr.core.App("udc/recipe/recipe_card", { 
			onPrepare: function(loader) {
			},
			onCreate: function(/* cpr.core.AppInstance */ app, exports) {
				var linker = {};
				// Start - User Script
				/************************************************
				 * recipe_card.js
				 * Created at 2025. 4. 21. 오전 10:31:19.
				 *
				 * @author gyrud
				 ************************************************/
	
				/**
				 * UDC 컨트롤이 그리드의 뷰 모드에서 표시할 텍스트를 반환합니다.
				 */
				exports.getText = function(){
					// TODO: 그리드의 뷰 모드에서 표시할 텍스트를 반환하는 하는 코드를 작성해야 합니다.
					return "";
				};;
				// End - User Script
				
				// Header
				app.declareAppProperty("title", "-");
				app.declareAppProperty("typeCategory", "-");
				app.declareAppProperty("situationCategory", "-");
				app.declareAppProperty("methodCategory", "-");
				app.declareAppProperty("difficulty", "-");
				app.declareAppProperty("cookingTime", "-");
				app.declareAppProperty("author", "-");
				app.declareAppProperty("likesCount", "-");
				app.declareAppProperty("recipeImg", "../../theme/images/recipe.svg");
				app.declareAppProperty("authorImg", "../../theme/images/user.svg");
				app.declareAppProperty("calories", "-");
				app.supportMedia("all and (min-width: 1024px)", "default");
				app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
				app.supportMedia("all and (max-width: 499.984px)", "mobile");
				
				// Configure root container
				var container = app.getContainer();
				container.style.css({
					"width" : "100%",
					"top" : "0px",
					"height" : "100%",
					"left" : "0px"
				});
				
				// Layout
				var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
				container.setLayout(responsiveXYLayout_1);
				
				// UI Configuration
				var image_1 = new cpr.controls.Image();
				image_1.style.css({
					"border-radius" : "5px",
					"box-shadow" : "0 2px 6px rgba(0, 0, 0, 0.1)"
				});
				image_1.bind("src").toAppProperty("recipeImg");
				container.addChild(image_1, {
					positions: [
						{
							"media": "all and (min-width: 1024px)",
							"top": "0px",
							"bottom": "150px",
							"width": "250px",
							"left": "calc(50% - 125px)"
						}, 
						{
							"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
							"top": "0px",
							"bottom": "150px",
							"width": "122px",
							"left": "calc(50% - 61px)"
						}, 
						{
							"media": "all and (max-width: 499.984px)",
							"top": "0px",
							"bottom": "150px",
							"width": "85px",
							"left": "calc(50% - 42px)"
						}
					]
				});
				
				var group_1 = new cpr.controls.Container();
				group_1.style.css({
					"border-radius" : "5px",
					"background-color" : "#FBF3EB",
					"box-shadow" : "0 2px 6px rgba(0, 0, 0, 0.1)"
				});
				var xYLayout_1 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_1);
				(function(container){
					var group_2 = new cpr.controls.Container();
					var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
					group_2.setLayout(verticalLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output("recipeTitle");
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "5px"
						});
						output_1.bind("value").toAppProperty("title");
						container.addChild(output_1, {
							"autoSize": "both",
							"width": "250px",
							"height": "25px"
						});
						var group_3 = new cpr.controls.Container();
						var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
						flowLayout_1.horizontalSpacing = 5;
						flowLayout_1.verticalSpacing = 0;
						flowLayout_1.verticalAlign = "middle";
						flowLayout_1.lineWrap = false;
						group_3.setLayout(flowLayout_1);
						(function(container){
							var output_2 = new cpr.controls.Output("recipeTypeCate");
							output_2.style.css({
								"border-right-style" : "solid",
								"padding-top" : "3px",
								"border-top-width" : "1px",
								"border-bottom-color" : "#856c66",
								"color" : "#856c66",
								"border-right-width" : "1px",
								"padding-left" : "7px",
								"border-left-color" : "#856c66",
								"font-size" : "12px",
								"padding-bottom" : "3px",
								"border-right-color" : "#856c66",
								"border-left-width" : "1px",
								"border-top-style" : "solid",
								"border-radius" : "5px",
								"border-left-style" : "solid",
								"border-bottom-width" : "1px",
								"border-top-color" : "#856c66",
								"border-bottom-style" : "solid",
								"padding-right" : "7px"
							});
							output_2.bind("value").toAppProperty("typeCategory");
							container.addChild(output_2, {
								"autoSize": "both",
								"width": "50px",
								"height": "20px"
							});
							var output_3 = new cpr.controls.Output("recipeSituationCate");
							output_3.style.css({
								"border-right-style" : "solid",
								"padding-top" : "3px",
								"border-top-width" : "1px",
								"border-bottom-color" : "#856c66",
								"color" : "#856c66",
								"border-right-width" : "1px",
								"padding-left" : "7px",
								"border-left-color" : "#856c66",
								"font-size" : "12px",
								"padding-bottom" : "3px",
								"border-right-color" : "#856c66",
								"border-left-width" : "1px",
								"border-top-style" : "solid",
								"border-radius" : "5px",
								"border-left-style" : "solid",
								"border-bottom-width" : "1px",
								"border-top-color" : "#856c66",
								"border-bottom-style" : "solid",
								"padding-right" : "7px"
							});
							output_3.bind("value").toAppProperty("situationCategory");
							container.addChild(output_3, {
								"autoSize": "both",
								"width": "50px",
								"height": "20px"
							});
							var output_4 = new cpr.controls.Output("recipeMethodCater");
							output_4.style.css({
								"border-right-style" : "solid",
								"padding-top" : "3px",
								"border-top-width" : "1px",
								"border-bottom-color" : "#856c66",
								"color" : "#856c66",
								"border-right-width" : "1px",
								"padding-left" : "7px",
								"border-left-color" : "#856c66",
								"font-size" : "12px",
								"padding-bottom" : "3px",
								"border-right-color" : "#856c66",
								"border-left-width" : "1px",
								"border-top-style" : "solid",
								"border-radius" : "5px",
								"border-left-style" : "solid",
								"border-bottom-width" : "1px",
								"border-top-color" : "#856c66",
								"border-bottom-style" : "solid",
								"padding-right" : "7px"
							});
							output_4.bind("value").toAppProperty("methodCategory");
							container.addChild(output_4, {
								"autoSize": "both",
								"width": "50px",
								"height": "20px"
							});
						})(group_3);
						container.addChild(group_3, {
							"autoSize": "both",
							"width": "100%",
							"height": "20px"
						});
						var group_4 = new cpr.controls.Container();
						var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
						flowLayout_2.horizontalSpacing = 5;
						flowLayout_2.verticalSpacing = 0;
						flowLayout_2.verticalAlign = "middle";
						flowLayout_2.lineWrap = false;
						group_4.setLayout(flowLayout_2);
						(function(container){
							var group_5 = new cpr.controls.Container();
							var flowLayout_3 = new cpr.controls.layouts.FlowLayout();
							flowLayout_3.scrollable = false;
							flowLayout_3.horizontalSpacing = 3;
							flowLayout_3.verticalSpacing = 0;
							flowLayout_3.verticalAlign = "middle";
							flowLayout_3.lineWrap = false;
							group_5.setLayout(flowLayout_3);
							(function(container){
								var image_2 = new cpr.controls.Image();
								image_2.src = "theme/images/difficullty.svg";
								container.addChild(image_2, {
									"width": "13px",
									"height": "13px"
								});
								var output_5 = new cpr.controls.Output("recipeDifficulty");
								output_5.style.css({
									"color" : "#856C66",
									"font-size" : "12px"
								});
								output_5.bind("value").toAppProperty("difficulty");
								container.addChild(output_5, {
									"autoSize": "both",
									"width": "47px",
									"height": "20px",
									"allowNewLine": false
								});
							})(group_5);
							container.addChild(group_5, {
								"autoSize": "width",
								"width": "51px",
								"height": "20px",
								"allowNewLine": false
							});
							var group_6 = new cpr.controls.Container();
							var flowLayout_4 = new cpr.controls.layouts.FlowLayout();
							flowLayout_4.scrollable = false;
							flowLayout_4.horizontalSpacing = 3;
							flowLayout_4.verticalSpacing = 0;
							flowLayout_4.verticalAlign = "middle";
							flowLayout_4.lineWrap = false;
							group_6.setLayout(flowLayout_4);
							(function(container){
								var image_3 = new cpr.controls.Image();
								image_3.src = "theme/images/clock.svg";
								container.addChild(image_3, {
									"width": "15px",
									"height": "15px"
								});
								var output_6 = new cpr.controls.Output("recipeCookingTime");
								output_6.style.css({
									"color" : "#856C66",
									"font-size" : "12px"
								});
								output_6.bind("value").toAppProperty("cookingTime");
								container.addChild(output_6, {
									"autoSize": "both",
									"width": "47px",
									"height": "20px",
									"allowNewLine": false
								});
							})(group_6);
							container.addChild(group_6, {
								"autoSize": "width",
								"width": "71px",
								"height": "20px",
								"allowNewLine": false
							});
							var group_7 = new cpr.controls.Container();
							var flowLayout_5 = new cpr.controls.layouts.FlowLayout();
							flowLayout_5.scrollable = false;
							flowLayout_5.horizontalSpacing = 0;
							flowLayout_5.verticalSpacing = 0;
							flowLayout_5.verticalAlign = "middle";
							flowLayout_5.lineWrap = false;
							group_7.setLayout(flowLayout_5);
							(function(container){
								var image_4 = new cpr.controls.Image();
								image_4.src = "theme/images/calories.svg";
								container.addChild(image_4, {
									"width": "20px",
									"height": "20px"
								});
								var output_7 = new cpr.controls.Output("recipeCalories");
								output_7.style.css({
									"color" : "#856C66",
									"font-size" : "12px"
								});
								output_7.bind("value").toAppProperty("calories");
								container.addChild(output_7, {
									"autoSize": "both",
									"width": "47px",
									"height": "20px",
									"allowNewLine": false
								});
							})(group_7);
							container.addChild(group_7, {
								"autoSize": "width",
								"width": "71px",
								"height": "20px",
								"allowNewLine": false
							});
						})(group_4);
						container.addChild(group_4, {
							"autoSize": "both",
							"width": "210px",
							"height": "20px"
						});
						var group_8 = new cpr.controls.Container();
						var flowLayout_6 = new cpr.controls.layouts.FlowLayout();
						flowLayout_6.scrollable = false;
						flowLayout_6.horizontalSpacing = 0;
						flowLayout_6.verticalSpacing = 0;
						flowLayout_6.verticalAlign = "middle";
						flowLayout_6.lineWrap = false;
						group_8.setLayout(flowLayout_6);
						(function(container){
							var group_9 = new cpr.controls.Container();
							var flowLayout_7 = new cpr.controls.layouts.FlowLayout();
							flowLayout_7.verticalAlign = "middle";
							group_9.setLayout(flowLayout_7);
							(function(container){
								var image_5 = new cpr.controls.Image();
								image_5.style.css({
									"border-radius" : "100%"
								});
								image_5.bind("src").toAppProperty("authorImg");
								container.addChild(image_5, {
									"width": "20px",
									"height": "20px"
								});
								var output_8 = new cpr.controls.Output("recipeAuthor");
								output_8.bind("value").toAppProperty("author");
								container.addChild(output_8, {
									"autoSize": "both",
									"width": "50px",
									"height": "20px"
								});
							})(group_9);
							container.addChild(group_9, {
								"autoSize": "height",
								"width": "50%",
								"height": "30px"
							});
							var group_10 = new cpr.controls.Container();
							var flowLayout_8 = new cpr.controls.layouts.FlowLayout();
							flowLayout_8.horizontalAlign = "right";
							flowLayout_8.verticalAlign = "middle";
							group_10.setLayout(flowLayout_8);
							(function(container){
								var image_6 = new cpr.controls.Image();
								image_6.src = "theme/images/heart.svg";
								image_6.style.css({
									"border-radius" : "100%"
								});
								container.addChild(image_6, {
									"width": "20px",
									"height": "20px"
								});
								var output_9 = new cpr.controls.Output("recipeLikesCount");
								output_9.bind("value").toAppProperty("likesCount");
								container.addChild(output_9, {
									"autoSize": "both",
									"width": "50px",
									"height": "20px"
								});
							})(group_10);
							container.addChild(group_10, {
								"autoSize": "height",
								"width": "50%",
								"height": "30px"
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "both",
							"width": "100%",
							"height": "30px"
						});
					})(group_2);
					container.addChild(group_2, {
						"width": "210px",
						"height": "110px",
						"left": "calc(50% - 105px)",
						"top": "calc(50% - 55px)"
					});
				})(group_1);
				container.addChild(group_1, {
					positions: [
						{
							"media": "all and (min-width: 1024px)",
							"top": "250px",
							"bottom": "0px",
							"width": "250px",
							"left": "calc(50% - 125px)"
						}, 
						{
							"media": "all and (min-width: 500px) and (max-width: 1023.984px)",
							"top": "250px",
							"bottom": "0px",
							"width": "122px",
							"left": "calc(50% - 61px)"
						}, 
						{
							"media": "all and (max-width: 499.984px)",
							"top": "250px",
							"bottom": "0px",
							"width": "85px",
							"left": "calc(50% - 42px)"
						}
					]
				});
			}
		});
	internalApp.title = "recipe_card";
	
	// Type declaration for recipe_card
	cpr.utils.Util.ensurePackage("udc.recipe").recipe_card = function(id){
		cpr.controls.UDCBase.call(this, "udc.recipe.recipe_card", internalApp, id);
	};
	
	udc.recipe.recipe_card.prototype = Object.create(cpr.controls.UDCBase.prototype);
	Object.defineProperty(udc.recipe.recipe_card.prototype, "type", {
		get : function(){
			return "udc.recipe.recipe_card";
		},
		
		configurable: true
	});
	
	// App Properties
	Object.defineProperty(udc.recipe.recipe_card.prototype, "title", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("title");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("title", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "typeCategory", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("typeCategory");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("typeCategory", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "situationCategory", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("situationCategory");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("situationCategory", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "methodCategory", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("methodCategory");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("methodCategory", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "difficulty", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("difficulty");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("difficulty", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "cookingTime", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("cookingTime");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("cookingTime", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "author", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("author");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("author", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "likesCount", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("likesCount");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("likesCount", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "recipeImg", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("recipeImg");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("recipeImg", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "authorImg", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("authorImg");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("authorImg", newValue, true);
		}
	});
	Object.defineProperty(udc.recipe.recipe_card.prototype, "calories", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("calories");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("calories", newValue, true);
		}
	});
	
	// Register type into the Platform and package
	cpr.core.Platform.INSTANCE.register(internalApp);
})();
/// end - udc.recipe.recipe_card
/// start - udc.recipe.recipe_title
/*
 * UDC Qualified Name: udc.recipe.recipe_title
 * App URI: udc/recipe/recipe_title
 * Source Location: udc/recipe/recipe_title.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.5481), Don't edit manually.
 */
(function(){
	// App Declaration
		var internalApp = new cpr.core.App("udc/recipe/recipe_title", { 
			onPrepare: function(loader) {
			},
			onCreate: function(/* cpr.core.AppInstance */ app, exports) {
				var linker = {};
				// Start - User Script
				/************************************************
				 * recipe_title.js
				 * Created at 2025. 4. 21. 오전 9:57:21.
				 *
				 * @author gyrud
				 ************************************************/;
				// End - User Script
				
				// Header
				app.declareAppProperty("value", null);
				app.supportMedia("all and (min-width: 1024px)", "default");
				app.supportMedia("all and (min-width: 500px) and (max-width: 1023.984px)", "tablet");
				app.supportMedia("all and (max-width: 499.984px)", "mobile");
				
				// Configure root container
				var container = app.getContainer();
				container.style.css({
					"font-weight" : "normal",
					"width" : "100%",
					"top" : "0px",
					"height" : "100%",
					"left" : "0px"
				});
				
				// Layout
				var xYLayout_1 = new cpr.controls.layouts.XYLayout();
				container.setLayout(xYLayout_1);
				
				// UI Configuration
				var group_1 = new cpr.controls.Container();
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
					var image_1 = new cpr.controls.Image();
					image_1.src = "theme/images/recipe.svg";
					container.addChild(image_1, {
						"top": "0px",
						"left": "0px",
						"width": "30px",
						"height": "30px"
					});
					var output_1 = new cpr.controls.Output("titleValue");
					output_1.style.css({
						"color" : "#856C66",
						"font-weight" : "bold",
						"font-size" : "16px"
					});
					output_1.bind("value").toAppProperty("value");
					container.addChild(output_1, {
						"top": "0px",
						"left": "40px",
						"width": "110px",
						"height": "30px"
					});
				})(group_1);
				container.addChild(group_1, {
					"width": "150px",
					"height": "30px",
					"left": "calc(50% - 75px)",
					"top": "calc(50% - 15px)"
				});
				if(typeof onBodyLoad == "function"){
					app.addEventListener("load", onBodyLoad);
				}
			}
		});
	internalApp.title = "recipe_title";
	
	// Type declaration for recipe_title
	cpr.utils.Util.ensurePackage("udc.recipe").recipe_title = function(id){
		cpr.controls.UDCBase.call(this, "udc.recipe.recipe_title", internalApp, id);
	};
	
	udc.recipe.recipe_title.prototype = Object.create(cpr.controls.UDCBase.prototype);
	Object.defineProperty(udc.recipe.recipe_title.prototype, "type", {
		get : function(){
			return "udc.recipe.recipe_title";
		},
		
		configurable: true
	});
	
	// App Properties
	Object.defineProperty(udc.recipe.recipe_title.prototype, "value", {
		get: function(){
			return this.getEmbeddedAppInstance().getAppProperty("value");
		},
		set: function(newValue){
			return this.getEmbeddedAppInstance().setAppProperty("value", newValue, true);
		}
	});
	
	// Register type into the Platform and package
	cpr.core.Platform.INSTANCE.register(internalApp);
})();
/// end - udc.recipe.recipe_title
